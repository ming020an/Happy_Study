顺序结构   分支结构（选择结构）  循环结构

分支结构：可以有多条分支执行线路，通过不同的条件来选择不同线路执行
	
分支结构的三种表达类型
	（1） if(表达式)
			语句;
		含义：如果 “表达式” 的值为真（非0），就执行 “语句” 
			有条件的执行 "语句"  选择性的执行 “语句”
			
		if(你很漂亮)
			做我女朋友吧;
			
		表达式：任意合法的 c 语言表达式，都可以
				常数 、 变量 
			int a = 0;
			if(a)
				printf("hehe\n");
			
		语句：满足“表达式”的情况下执行的代码
			单语句： 只有一条执行指令的语句
			复合语句：用{}扩其来的语句
				if/while/do……while/switch 。。。。
				
				
		if(0)
		{
			printf("hehe\n");
			printf("haha\n");
		}
	编程建议：在使用if时，无论if后是否有语句执行，都用{}扩起来	
	
		if(a == b)
		{
		}
		printf("hahahahaha\n");
		
		练习：
			输入两个int型的数，要求从大到下打印
			int a,b;
			scanf("%d%d",&a,&b);//scanf会自动匹配空格来做间隔
								//在利用scanf做输入的时候，空格不会干扰输入数据
								//只起到分割作用
	
	（2）if(表达式1)
			语句1；
		else
			语句2；
			
		含义：如果 “表达式”值位真（非0）则执行语句1；
				否则（else，“表达式”的值为假） 这些语句2
				
		例如：
			if(你很漂亮)
				做我女朋友吧
			eles
				算了吧
				
		语句1 和 语句2 是一个互斥的语句
		
			int a = 3;
			int b = 4;
			if(a+b>a-b)
				a = 10;//狼死了
				b = 15;
			else
				a = a+b;
			printf("%d\n",a);
			
			
		if和else是狼狈为奸的！！！
		if后面可以没有else
		但是
		else前面必须有一个if
		因为 else本身的含义是否定，它是用来否定某一个东东的（它前面的if）
		
		上面例子第一种改法：
		int a = 3;
		int b = 4;
		if(a+b>a-b)
		{
			a = 10;//狼死了
			b = 15;
		}
		else
			a = a+b;
		printf("%d\n",a);
		
		
		
		第二种
		int a = 3;
		int b = 4;
		if(a+b>a-b)
			a = 10;//狼死了
			b = 15;		
		if(a+b <= a-b)
			a = a+b;
		printf("%d\n",a);
		
	练习：
		int a,b;
		从键盘获取两个数
		如果a大于b则输出两个数的和
		否则输出两个数的积
		
		scanf("%d%d",&a,&b);
		if(a>b)
		{
			printf("a+b=%d\n",a+b);
		}
		else
		{
			printf("a*b=%d\n",a*b);
		}
		
		输入一个字母，如果是大写字母则变小写字母 [A-Z] 65~90
					  如果是小写字母则变大写字母 [a-z] 97~122 
	

	并不是所有事情都只有一个互斥的事情
	如果有多个互斥条件，那么要如何处理？
					  
	(3) 
		if(表达式1)
			语句1；
		else if(表达式2)
			语句2；
		else if(表达式3)
			语句3；
		....
		else if(表达式m)
			语句m；
		else
			语句n；
			
		含义：如果 表达式1 为真，则执行语句1
			  否则（else，表达式1 为假）并且 表达式2 为真，则 执行语句2
			否则（else，表达式2 为假），并且 表达式3 为真，则 执行语句3
			....
			否则（else，表达式m-1为假），并且 表达式m为真，则 执行语句m
			否则 
				执行 语句n
			
		比如：
			
			if(c>='A' && c<='Z')
				printf("%c\n",c+32);
			else if(c>='a' && c<= 'z')
				printf("%c\n",c-32);
			else 
				printf("other\n");
				
		从键盘获取一个1-7的数，打印出对应的汉字星期几
		
		a
		if(a==1)
		{
			printf("星期一\n");
		}
	
	练习1：
		从键盘获取3个int型的数a,b,c，并从小到大输出
			推荐方法：先比较两个数的大小，将较小的数放在前面
			if(a>b) ab交换
			a>c  ac交换
			b>c 
			
	练习2：
		从键盘获取3个数，判断以这三个数为边，是否能组成三角形
			提示：三角形任意两边之和大于第三边
			能：输出yes
			不能：输出no
			
			
if嵌套语句:条件中的条件
	在if的语句中，包含一个或多个if语句，就称为嵌套if语句
	if(你很漂亮)
	{
		你做我女朋友吧；
		if(你答应了)
		{
			那我们在一起了
		}
		else
		{
			拜拜
		}
	}
	
	if(表达式1)
	{
		if(表达式2)
		{
			if(表达式3)
			{
				
			}
		}
		else
		{
		}
	}
	else
	{
	}
	这样我怎么知道那两个是一对的呢！！！！！！
	所有编程建议：
		记得打{}和缩进
	
	else的匹配问题：
		else总是跟它上面的、最近的、同级的未匹配的那个if语句进行匹配
		
	嵌套if语句中的 表达式 是属于 “并且”关系
	
switch分支语句
	switch分支一般用来列举所有的可能性
	如果在代码中需要“列举”一个对象的所有值时，我们一般选用switch
	因为在这种情况下，switch比if——else更加简洁和清晰
	
	语法：
	switch(表达式)
	{
		case 常量表达式1:
			语句1;
			break;
		case 常量表达式2:
			语句2;
			break; 
		.....
		case 常量表达式m:
			语句m;
			break;
		default:   //其它
			语句n;
			break;
	}
	
	含义：switch把 “表达式”的值都通过 case "列举" 出来
		“表达式”的值会和case后面的"常量表达式“进行比较，
		当与某个case后的值相匹配，则执行该case后的语句
		直到遇到break
	    如果与case后的值都不匹配，则执行default后的语句
		
		
	比如：
	a == 1;
	switch(a)
	{
		case 1:
			printf("星期一\n");
			break;
		case 2: //a == 2
			printf("星期二\n");
			break;
		case 3: //a == 3
			...
			break;
		...:
			...
		default:
			printf("input error\n");
			break;		
	}
	
	注意：case后面只能接常量表达式
		常量表达式：表达式的值是固定不变的，被称为常量表达式
		
	练习：
		昨天139班进行了测试，老师需要给学生成绩进行评级
			A 90<= x <=100
			B 80<= x <90
			C 70<= x <80
			D 60<= x <70
			E  0<= x <60
			
		switch(x/10)
		{
			case 0：
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
				printf("E");
				break;
			case 6:
				printf("D");
				break;
			case 7:
				printf("C");
				break;
			case 8:
				printf("B");
				break;
			case 9:
			case 10:
				printf("A");
				break;
			default:
				printf("hao niu bi\n");
				break;
		}
			
	
	
	
	case后可以没有语句，cpu会自动找到该case后第一个有语句的case执行
	
	练习：某集团公司发年终奖，根据个人业绩来发放，业绩分为以下等级
		如果业绩在 100000 以内，没有年终奖
		业绩在100000 ~ 200000的，拿5.5%的提成
		业绩在200000 ~ 300000之间的部分拿 5%的提成
		业绩在300000 ~ 400000之间的部分拿 4.5%的提成
		。。。。
		业绩超过1000000的部分拿1%
		
		
		求：您今年能拿多少年终奖（输入一个整数，能过计算出能拿多少钱）
		
		num = 业绩/100000;		
		switch(num)
		{
			case 10：
				qian += (业绩-1000000)/1000*10;
			....
		}
	
	
	比如：您今年的业绩是 250000
	10w*0 + 10w*5.5% + 5w*5%
			x=10w/1000   x=5w/1000