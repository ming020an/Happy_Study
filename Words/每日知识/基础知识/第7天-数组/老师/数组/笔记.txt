0.问题引入
	int a;
	int a,b;
	int a,b,c;
	
	定义100个int型的变量
	int a0,a1,a2......,a99;
	这么定义不太现实
	==>数组
	
1.数组
	一组具有相同数据类型的有限个元素的集合
	"具有相同数据类型"  "有限个元素"  "集合"
	
	比如:int a[100];
			在a数组中最多可以存放100个int型数据
			
	数据类型:c语言中任意合法的数据类型都可以
	
	数组分为:
		一维数组
		二维数组(多维数组):数组元素是一个数组的数组被称为二维数组
		字符数组
			
			c语言中,只有一维数组!!!!
			
2.一维数组
	定义格式:
		类型说明符 数组名[数组容量];
		
		类型说明符:即数据类型,c语言中任意合法的数据类型都可以
		数组名:数组的名字,是一个标识符,需要满足c语言 标识符的规范
			标识符规范:以字母数字和_组成,并且必须以 _ 或 字母开头
		数组容量:指定数组元素的最大存储数量,指明数组中最多能存放多是个数据元素
			一般来说,数组容量必须是 一个常量/常量表达式/常量标识符
			
			因为:数组的容量必须是固定不变的!!
			
		例如:
			int a[10];  a的数据类型是? a的容量是? 数组元素的类型?
				a 是一个数组型数据,是一个具有10个int型数据的数组
				a 的容量是 10个int
				a 数组的元素类型是  int
				
		定义数组时用的 类型说明符是用来说明数组元素的数据类型的
		
			float b[100];  b是数组型的,b中最多可以存放100个float型数据
		
2.一维数组在内存中的存放形式
	数组在内存中的存放:
		用一块连续的内存空间,从低地址到高地址依次存放数组中的元素
		
		int a[10];
		设:  &a[0]  ---->  x
			 &a[1]  ---->  x+4
			 &a[2]  ---->  x+4+4
			 ....
			 &a[9]  ---->  x+4+4+4+...+(9个4)
			 
3.一维数组的引用
	格式:
		数组名[下标]   表示数组的某个元素
			"小标":必须是一个整数型表达式,从 0~n-1
		
		例如: int a[1000];
			数组元素分别是:
			a[0]
			a[1]
			a[2]
			a[3]
			....
			a[1000-1]   //a[999]
			
	引用数组元素时,与引用普通变量是一样的
	数组成员同样具有左值和右值
		比如:
			a[5] = 1024;       //左值,表示 a[5]这个元素对应的存储空间
			b = a[10] + 4096;  //右值,表示a[5]这个元素存储空间存储的数据
			
			
4.一维数组的初始化
	初始化:在定义对象时,赋予它初始值,被称为初始化
		数组的初始化用{}进行

	例如:
		int a[10] = {1,2,3,4,5,6,7,8,9,0};
		int b[10] = {0,1,2,3};
		
	数组初始化:
		(1):全部初始化
		(2):部分初始化,使用部分初始化时,是从数组第一个元素开始初始化赋值
			int a[10] = {5};  ----> a[0]== 5;  a[1]~a[9] == 0;
			部分初始化时,未初始的部分全部初始化为0
		(3):不指定数组容量的全元素初始化
			int a[] = {0,1,2,3,4,5};  //a的容量是 6
				
				
		typeof:用来求变量类型
			比如: int a = 5;
				typeof(a); -----> int
				typeof(a) b = 10; //  int b = 10;
				sizeof(a);  // 4
				
				
				int a[10] = {1,2,3};  //a的类型是一个数组,容量是10个int
				typeof(a);//-----> int[10]  
				typeof(a) b; //  -----> int[10] b;  ----> int b[10];
	
		练习:
			1.定义一个数组,从键盘获取所有元素的数据
			
				int a[10];
				
				scanf("%d",&a[0]);
				scanf("%d",&a[1]);
				....
				scanf("%d",&a[9]);
				
				==>for
				
			2.打印上述数组中的所有元素
				printf("%d\n",a[0]);
				printf("%d\n",a[1]);
				......
				
				===>for
				
				
			3.求 100000! 末尾有多少个0
				求质因数:一个正整数可以分解成 多个 质因数之积
				
				6 = 2*3;
				10 = 2*5;
				12 = 2 * 2 * 3;
				
				末尾是0;
				 2*5    10   15*2   20  25*2
				 ===>
				 2*5   2*5   2*3*5  2*2*5  2*5*5
				 
				 ======>
					100000 的质因数中 2 的个数 多于 5 的个数
					
					如果一个数能被5整除,那么该数的因数中一定有至少一个5
					
			写代码:
				有思路
				写一份伪代码将思路清晰的列举出来
				再取补全伪代码
				
				for(i=5;i<=100000;i+=5)
				{
					x = i;
					while(x%5 == 0) //if(x%5 == 0) //某个数能被5整除
					{
						n++; //表示因数中5的个数 +1
						x /= 5;
						/*
						if(x%5 == 0)
						{
							n++; //表示因数中5的个数 +1
							x /= 5;
						}
						*/
					}
				}
				
					
					
					
			**4.求1024的65535次方后三位是多少
					后三位!!!!
					
					
					
				首先取出后三位
					//x = x%1000; 
				x = x*x%1000;
				x = x*x%1000;
				......
				x = x*x%1000;//第65535次
				
				
					
					
	练习:
		1.判断一个一维数组是否是升序(递增/后面的数总比前面的数大)
			a[i] < a[i+1] yes
			a[i] > a[i+1] no
					
					
		2.从键盘获取数据,在插入时,使数组最终是有序的
			"插入排序"
			"有序"数组插入
				空数组:有序的
				1个元素的数组:有序的
			--->两个元素的数组:有序的(升序/降序)
			int a[10] = {0};
			int n = 0; //计算,数组元素个数
			int x;
			int i , j;
			
			
			scanf("%d",&x);
			/*输入的是第一个元素吗?*/
			if(n == 0) //数组中没有元素
			{
				a[0] = x;
				n++;
			}
			如果已经有元素了,那么找第一个比x大的数
			for(i=0;i<n;i++)
			{
				if(a[i]>x)
				{
					i_max = i; // 记录找到的插入位置
					break;
				}
			}
			
			/*找到要插入的位置了!!!!*/
			if(i == n)//一直没找到比输入的数要大的数
			{
				a[n] = x;
				n++;
			}
			else
			{
				/*
					a[n] = a[n-1];
					a[n-1] = a[n-1 -1];
					...
					a[i_max+1] = a[i_max];
				*/
				for(i=n;i>i_max;i--)
				{
					a[i] = a[i-1];
				}
				a[i_max] = x;
				n++;
			}
			
			
			插入:
				(1):找位置
					---->后移!!!!
				(2):插入
					
					
				1 3 5 7 9	--->数组升序 设n是数组元素的个数  a[n-1]就是最后一个;
				---> 4  找第一个比4大数,将4插入前面 i_max
				1 3 4 5 7 9
				---> 10 插在最后面
				
					
					
					
					
					
					
					
					
				
				 
				
		
		