链表:链表是利用不连续的空间来存放相同的一些列是数据
	链表由多个结构体组成的线性表
	组成链表的结构体可以分为两个部分
		数据域:存放链表结点的数据
		关系域(指针域):存放了相邻结点地址
		
	
	链表创建以后可以通过头指针来找到链表中各个结点的地址
	为什么??
		因为头指针指向的结构体中有一个指针指向第二个结点
		第二个结点有一个指针指向第三个结点
		第三个结点中有一个指针指向第四个结点
		.........
		第n-1个结点中有一个指针指向第n个结点
		第n结点是最后一个结点,那么它的指针指向NULL
		
		
	----->创建了链表以后,所有的结点都是通过头指针来寻找的
		那么要找到最后一个结点(n个结点),需要多长时间??
			if(p->next==NULL)
			O(n)
		
	有没有一个办法在创建链表的时候不知是记住头指针,
	同时还记住尾指针呢???
		指针数组  struct node* a[2] = {first,last};
		
	有没有办法在创建链表的时候,同时记录链表结点个数呢??
		----->可以,用一个结构体来保存就行了!!!
		这个结构体的成员应该有
			指向第一个结点的指针
			指向最后一个结点的指针
			记录链表结点个数的 int型变量
		struct list
		{
			struct node* first;
			struct node* last;
			int num;
		};
		
		上述的结构体是帮我们记录了一些链表的相关信息
		相当于帮组我们管理了链表
		我们称这个结构体为 头结点 结构体
		
链表头结点的作用是什么呢???
	帮助管理链表的一个结构体!!!
	
	
	头结点:整个班上学生的考试情况strcut class
		数据域:	
				班级
				人数
				语文
				数学
				英语
		关系域:上述的数据域的数据是统计整个班学生的数据而来
				指向学生链表的指针
				(first/last)
			头结点的关系域是为了能够找到 链表
			
	链表结点:每个学生的考试情况就是一个结点struct student
		数据域:
				学号
				姓名
				班级
				语文
				数学
				英语
				平均分
		指针域:
			指向下一个结点的指针(next)
			
			
	/*0.创建一个头结点*/
	struct class * create_head(void)
	{
		//0.1 定义一个头结点结构体对象
		//0.2 (分配空间)
		//0.3 初始化赋值
		//返回头结点指针
	}
	
	/*1.创建一个链表,并用头结点管理(让头结点的指针指向这个链表)*/
		//1.1 定义一个头结点对象
		//1.2 用户输入对象的相关数据--->有了一个结点
		//1.3 将结点插入到头结点所管理的链表
			//1.3.1 头结点还没有管理链表(first指针还是指向空的)
				//first last都应该指向 第一个插入的结点
			//1.3.2 头结点已经管理了一个链表
				//按需求将新结点插入该链表
		//返回头结点指针
		
	/*2.输出相关的信息*/
		//打印相关信息
		
	
		
		
	
双向链表
	链表的结点结构体中,指针域包含两个指针,分别指向该结点的前驱和后驱
		第一个结点的前驱 为NULL
		最后一个结点的后驱 为NULL
		其余结点 既有前驱 也有 后驱
		
	双向链表的结点结构体定义:
	struct node
	{
		ElemType data;  //数据域
		struct node *next; //后驱指针,指向后一个结点
		struct node *prev; //前驱指针,指向前一个结点
	};
	
	双向链表的 增 删 改 查
		增	先定位,再连线,后转接
		删  先定位,再转接,后free
	


循环单链表
	链表的尾结点的指针域指向第一个结点,如此,就将链表形成了一个环
	因此被称为循环链表
	
	如何创建一个循环单链表呢??
		先创建一个单链表,然后让单链表的 
		最后一个结点的next指向 第一个结点
		
		
	如何创建一个循环双链表呢??
		你懂的!!!!